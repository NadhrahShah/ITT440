#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <unistd.h>
#include <arpa/inet.h>

int main() {
    srand(time(NULL)); // Seed the random number generator with the current time
    int random_number = rand() % 900 + 100; // Generate a random number between 100 and 999

    // Create a socket
    int server_socket = socket(AF_INET, SOCK_STREAM, 0);
    if (server_socket == -1) {
        perror("Socket creation failed");
        exit(EXIT_FAILURE);
    }

    // Bind the socket to an IP address and port
    struct sockaddr_in server_address;
    server_address.sin_family = AF_INET;
    server_address.sin_port = htons(8080);
    server_address.sin_addr.s_addr = INADDR_ANY;

    if (bind(server_socket, (struct sockaddr*)&server_address, sizeof(server_address)) == -1) {
        perror("Binding failed");
        exit(EXIT_FAILURE);
    }

    // Listen for incoming connections
    if (listen(server_socket, 5) == -1) {
        perror("Listening failed");
        exit(EXIT_FAILURE);
    }

    printf("Server is waiting for connections...\n");

    // Accept a connection
    int client_socket = accept(server_socket, NULL, NULL);
    if (client_socket == -1) {
        perror("Accepting connection failed");
        exit(EXIT_FAILURE);
    }

    // Send the random number to the client
    if (send(client_socket, &random_number, sizeof(random_number), 0) == -1) {
        perror("Sending failed");
        exit(EXIT_FAILURE);
    }

    printf("Random number sent to the client: %d\n", random_number);

    // Close the sockets
    close(client_socket);
    close(server_socket);

    return 0;
}
